plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.palantir.docker' version '0.36.0'
//    id "com.avast.gradle.docker-compose" version "0.17.7"
}

group = 'com.pavvels'
version = '0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(JavaVersion.VERSION_21.toString())
    }
}

jar {
    enabled = false
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'io.projectreactor.netty:reactor-netty'
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.111.Final:osx-aarch_64'
    implementation 'org.json:json:20240303'
    compileOnly 'org.projectlombok:lombok'
//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

docker {
    name "${rootProject.name}:${version}"
    dockerfile file('Dockerfile')
    files bootJar.outputs.files
    buildArgs(['JAR_FILE': "${rootProject.name}-${version}.jar"])
}

//dockerCompose {
//    isRequiredBy(tasks.test)
//}
